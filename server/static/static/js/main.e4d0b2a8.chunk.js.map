{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","message","setmessage","useEffect","ws","WebSocket","onopen","send","JSON","stringify","op","topic","type","console","log","onmessage","event","data","onclose","close","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA+BeA,MA5Bf,WAAgB,IAAD,EACgBC,mBAAS,gCADzB,mBACPC,EADO,KACEC,EADF,KAyBd,OAvBAC,qBAAU,WACT,IAAMC,EAAK,IAAIC,UAAU,uBAkBzB,OAjBAD,EAAGE,OAAS,WACXF,EAAGG,KACFC,KAAKC,UAAU,CACdC,GAAI,YACJC,MAAO,QACPC,KAAM,qBAGRC,QAAQC,IAAI,cAEbV,EAAGW,UAAY,SAACC,GAEfd,EAAWc,EAAMC,OAElBb,EAAGc,QAAU,WACZL,QAAQC,IAAI,6BAEN,SAACV,GACPA,EAAGe,WAEF,IACI,qBAAKC,UAAU,MAAf,SAAsBnB,KChBfoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e4d0b2a8.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n\tconst [message, setmessage] = useState('Subscribe to the /logs topic');\n\tuseEffect(() => {\n\t\tconst ws = new WebSocket('ws://localhost:9090');\n\t\tws.onopen = () => {\n\t\t\tws.send(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\top: 'subscribe',\n\t\t\t\t\ttopic: '/logs',\n\t\t\t\t\ttype: 'std_msgs/String',\n\t\t\t\t})\n\t\t\t);\n\t\t\tconsole.log('connected');\n\t\t};\n\t\tws.onmessage = (event) => {\n\t\t\t// console.log(event);\n\t\t\tsetmessage(event.data);\n\t\t};\n\t\tws.onclose = () => {\n\t\t\tconsole.log('WebSocket is closed now.');\n\t\t};\n\t\treturn (ws) => {\n\t\t\tws.close();\n\t\t};\n\t}, []);\n\treturn <div className=\"App\">{message}</div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}